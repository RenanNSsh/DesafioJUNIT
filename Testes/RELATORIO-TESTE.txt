Nome: Renan do Nascimento Sanches
RM: 81500

1º PASSO) Criação do repositório




2º PASSO) Criação da classe JUNIT Teste

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class JulgamentoPrisioneiroTest{

	@Test
	void test() {
		fail("Not yet implemented");
	}

}




3º PASSO) Ocorreram erros de compilação pois não foi encontrado o enum Resposta, com o seguinte log: 
"The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta" 

4º PASSO) então criei o seguinte enum:
 
public enum Resposta {
	DELACAO
}


5º PASSO) Implementação dos métodos de testes e correções dos testes. Classe final:

import static org.junit.jupiter.api.Assertions.*;

import org.junit.Assert;
import org.junit.jupiter.api.Test;

class JulgamentoPrisioneiroTest {
   private final int PENA_INOCENCIA = 10;
   private final int PENA_CONDENACAO_MUTUA = 15;
   private final int PENA_CONDENACAO_INDIVIDUAL = 10;
   private final int PENA_CONDENACAO_CUMPLICES = 11;

	@Test
	void deveTerPenaCondenacaoMutua() {
		JulgamentoPrisioneiro jp = new JulgamentoPrisioneiro();
		Resposta respostaPrisioneiroA = Resposta.DELACAO;
		Resposta respostaPrisioneiroB = Resposta.DELACAO;
		int pena = jp.calculaPena(respostaPrisioneiroA, respostaPrisioneiroB);
		Assert.assertEquals(pena, PENA_CONDENACAO_MUTUA);
	}


	@Test
	void deveTerPenaInocencia() {
		JulgamentoPrisioneiro jp = new JulgamentoPrisioneiro();
		Resposta respostaPrisioneiroA = Resposta.INOCENTE;
		Resposta respostaPrisioneiroB = Resposta.INOCENTE;
		int pena = jp.calculaPena(respostaPrisioneiroA, respostaPrisioneiroB);
		Assert.assertEquals(pena, PENA_INOCENCIA);
	}
	

	@Test
	void deveTerPenaCondenacaoIndividual() {
		JulgamentoPrisioneiro jp = new JulgamentoPrisioneiro();
		Resposta respostaPrisioneiroA = Resposta.DELACAO;
		Resposta respostaPrisioneiroB = Resposta.INOCENTE;
		int pena = jp.calculaPena(respostaPrisioneiroA, respostaPrisioneiroB);
		Assert.assertEquals(pena, PENA_CONDENACAO_INDIVIDUAL);
	}
	

	@Test
	void deveTerPenaCondenacaoCumplices() {
		JulgamentoPrisioneiro jp = new JulgamentoPrisioneiro();
		Resposta respostaPrisioneiroA = Resposta.INOCENTE;
		Resposta respostaPrisioneiroB = Resposta.DELACAO;
		int pena = jp.calculaPena(respostaPrisioneiroA, respostaPrisioneiroB);
		Assert.assertEquals(pena, PENA_CONDENACAO_CUMPLICES);
	}
	
	
	
}


Versão JUNIT: 5.
Versão da classe de objetos corrigida:

public class JulgamentoPrisioneiro {
   private int PENA_INOCENCIA = 10;
   private int PENA_CONDENACAO_MUTUA = 15;
   private int PENA_CONDENACAO_INDIVIDUAL = 10;
   private int PENA_CONDENACAO_CUMPLICES = 11;

   public int calculaPena(Resposta respostaPrisioneiroA, Resposta respostaPrisioneiroB) {
      if (respostaPrisioneiroA == Resposta.DELACAO) {
          if (respostaPrisioneiroB == Resposta.DELACAO) {
            return PENA_CONDENACAO_MUTUA;
          } else {
                 return PENA_CONDENACAO_INDIVIDUAL;
                 }
       } else {
                if (respostaPrisioneiroB == Resposta.DELACAO) {
                    return PENA_CONDENACAO_CUMPLICES;
                } else {
                         return PENA_INOCENCIA;
                        }
                }
     }
}






